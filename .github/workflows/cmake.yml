name: CMake

on:
  push:
    branches: [ main, githubaction ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      matrix:
        os: [{name: "ubuntu-24.04", toolset: "gcc", link: "shared", platform: ""}, {name: "windows-2022", toolset: "msvc", link: "static", platform: "2022"}]
    runs-on: ${{ matrix.os.name }}
    steps:
    - uses: actions/checkout@v3
    - name: Install boost
      uses: MarkusJx/install-boost@v2.5.1
      id: install-boost
      with:
        # REQUIRED: Specify the required boost version
        # A list of supported versions can be found here: 
        # https://github.com/actions/boost-versions/blob/main/versions-manifest.json
        boost_version: 1.80.0
        # OPTIONAL: Specify a platform version
        platform_version: ${{ matrix.os.platform }}
        # OPTIONAL: Specify a custom install location
        # boost_install_dir: /home/runner/boost-1.78.0
        # OPTIONAL: Specify a toolset
        toolset: ${{ matrix.os.toolset }}
        link: ${{ matrix.os.link }}

    - name: Install magic enum
      uses: actions/checkout@v3
      with:
          repository: Neargye/magic_enum
          path: magic_enum
    - name: Install wise enum
      uses: actions/checkout@v3
      with:
          repository: quicknir/wise_enum
          path: wise_enum/wise_enum
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBoost_ROOT=${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
